name: 'Terraform GitHub Actions'
on:
  # - pull_request
  push:
    branches:
      - "master"
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
      
      - name: 'Terraform Init'
        run: |
          "echo AWS_KEY:"
          "echo ${{ secrets.AWS_KEY}}"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.15.4
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: '.'
          tf_actions_comment: true
          args: '-backend-config "access_key=$TF_VAR_AWS_KEY" -backend-config "secret_key=$TF_VAR_AWS_SECRETS"'
        env:
          TF_WORKSPACE: default
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_AWS_KEY: ${{ secrets.AWS_KEY}}
          TF_VAR_AWS_SECRETS: ${{ secrets.AWS_SECRETS }}
          TF_VAR_OKTA_API_TOKEN: ${{ secrets.OKTA_API_TOKEN }}
      
      - name: 'changed Files'
        uses: jitterbit/get-changed-files@v1
        id: abc
        with:
          format: space-delimited
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Printing
        run: |
          echo "All:"
          echo "${{ steps.abc.outputs.all }}"
          echo "Added:"
          echo "${{ steps.abc.outputs.added }}"
          echo "Removed:"
          echo "${{ steps.abc.outputs.removed }}"
          echo "Renamed:"
          echo "${{ steps.abc.outputs.renamed }}"
          echo "Modified:"
          echo "${{ steps.abc.outputs.modified }}"
          echo "Added+Modified:"
          echo "${{ steps.abc.outputs.added_modified }}"
      
      - name: 'Terraform Apply'
        if: "contains(steps.abc.outputs.added, '.tfvars')"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.15.4
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: '.'
          tf_actions_comment: true
          args: '-var-file="${{ steps.abc.outputs.added }}" -auto-approve '
        env:
          TF_WORKSPACE: default
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_AWS_KEY: ${{ secrets.AWS_KEY}}
          TF_VAR_AWS_SECRETS: ${{ secrets.AWS_SECRETS }}
          TF_VAR_OKTA_API_TOKEN: ${{ secrets.OKTA_API_TOKEN }}
      
      - name: 'Terraform Destroy'
        if: "contains(steps.abc.outputs.renamed, '_delete.tfvars')"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.15.4
          tf_actions_subcommand: 'destroy'
          tf_actions_working_dir: '.'
          tf_actions_comment: true
          args: '-var-file="${{ steps.abc.outputs.renamed }}" -auto-approve '
        env:
          TF_WORKSPACE: default
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_AWS_KEY: ${{ secrets.AWS_KEY}}
          TF_VAR_AWS_SECRETS: ${{ secrets.AWS_SECRETS }}
          TF_VAR_OKTA_API_TOKEN: ${{ secrets.OKTA_API_TOKEN }}
